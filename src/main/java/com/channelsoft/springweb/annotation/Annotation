Java 注解
Documented——指明拥有这个注解的元素可以被javadoc此类的工具文档化。
            这种类型应该用于注解那些影响客户使用带注释的元素声明的类型。
            如果一种声明使用Documented进行注解，这种类型的注解被作为被标注的程序成员的公共API 。
Inherited——指明该注解类型被自动继承。如果用户在当前类中查询这个元注解类型并且当前类的声明中不包含这个元注解类型，那么也将自动查询当前类的父类是否存在Inherited元注解，这个动作将被重复执行知道这个标注类型被找到，或者是查询到顶层的父类。
Retention——指明在什么级别显示此注解
Target——指明该类型的注解可以注解的程序元素的范围

Target主要的参数类型包括以下几种

ElementType.TYPE 用于类，接口，枚举但不能是注解
ElementType.FIELD 作用于字段，包含枚举值
ElementType.METHOD 作用于方法，不包含构造方法
ElementType.PARAMETER 作用于方法的参数
ElementType.CONSTRUCTOR 作用于构造方法
ElementType.LOCAL_VERIABLE 作用于本地变量或者catch语句
ElementType.ANNOTATION_TYPE 作用于注解
ElementType.PACKAGE 作用于包

Retention主要的参数类型包括以下几种

RetentionPolicy.SOURCE 注解存在于源代码中，编译时会被抛弃
RetentionPolicy.CLASS 注解会被编译到class文件中，但是JVM会忽略
RetentionPolicy.RUNTIME JVM会读取注解，同时会保存到class文件中

@Inherited 表明了注解的类型是自动被继承的。如果一个注解使用了@Inherited这个元注解，则它的子类也会自动添加这个注解（即这个注解是可以被继承的）。

jdk1.5后反射的实体  Class都实现了AnnotationElement接口