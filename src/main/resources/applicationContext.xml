<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!--<context:component-scan base-package="com" resource-pattern="*.class" />-->
    <!--<context:component-scan base-package="com.channelsoft.springweb">
        &lt;!&ndash;排除在外的目标类&ndash;&gt;
        <context:exclude-filter type="regex" expression="anno*"/>
        &lt;!&ndash;包含在内的目标类&ndash;&gt;
        <context:include-filter type="aspectj" expression="*.Controller+"/>
        &lt;!&ndash;
            过滤表达式
            annotation   com.baobaotao.XxxAnnotation   所有标注了XxxAnnotation的类
            assignable   com.baobaotao.XxxService      所有继承扩展XxxService的类
            aspectj      com.baobaotao..*Service+      所有类名以service结束的 类
            regex        com\.baobaotao\.anno\..*      所有com.baobaotao.anno包下的类 使用这则表达式
            custom       com.baobaotao.XxxTypeFilter   采用XxxTypeFilter通过代码过滤，该类必须事项org.springframework.core.type.TypeFilter接口
        &ndash;&gt;
    </context:component-scan>-->

    <context:component-scan base-package="com.channelsoft.springweb.bean.Annotation"/>
    <import resource="appTask.xml"></import>
    <bean id="car" class="com.channelsoft.springweb.bean.CarWithLifeCycle" init-method="myInit" scope="prototype">
    </bean>
    <bean id="construtBean" class="com.channelsoft.springweb.bean.ConstrcutBean">
        <constructor-arg index="1">
            <value>李柱</value>
        </constructor-arg>
        <constructor-arg index="0">
            <value>男</value>
        </constructor-arg>
    </bean>
    <bean id="carFactory" class="com.channelsoft.springweb.factory.CarFactory" factory-method="buildCar"></bean>
<!--
    <bean id="carWithFactory" class="com.channelsoft.springweb.bean.Car" factory-bean="carFactory" factory-method="buildCar"></bean>
-->
    <bean id="carL" class="com.channelsoft.springweb.bean.Car">
        <property name="name">
            <value>劳斯莱斯</value>
        </property>
        <property name="speed">
            <value>1000</value>
        </property>
    </bean>
    <bean id="collection" class="com.channelsoft.springweb.bean.CollectionBean">
        <property name="list">
            <list>
                <value>first</value>
                <value>second</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">

        <property name="customEditors">
            <map>
                <entry key="com.channelsoft.springweb.bean.definition.Car">
                    <bean class="com.channelsoft.springweb.bean.definition.CustomCarEditor" />
                </entry>
            </map>
        </property>
    </bean>

    <bean id="propertyEditorCar" class="com.channelsoft.springweb.bean.definition.Boss">
        <property name="car">
            <value>奔驰,100,5000.4</value>
        </property>
        <property name="name">
            <value>哈哈哈</value>
        </property>
    </bean>

 <!--   <bean id="magicBean" class="com.channelsoft.springweb.bean.MagicBoss">
        <lookup-method name="getCar" bean="carL"></lookup-method>
    </bean>-->

    <bean id="factoryBean" class="com.channelsoft.springweb.bean.CarFactoryBean">
        <property name="carInfo">
            <value>12,9999</value>
        </property>

    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>
                classpath:log4j.properties
            </value>
        </property>
     <!--   <property name="locations">
            <list>
                <value></value>
            </list>
        </property>-->
        <!--spring采用默认系统默认编码，如需特殊指定则需要在此处指定-->
        <property name="fileEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <bean id="dataSource" class="com.channelsoft.springweb.bean.Car">
        <property name="name">
            <value>${log4j.rootLogger}</value>
        </property>
    </bean>

    <!--这种配置相当于在spring容器中定义了一个PropertyPlaceholderConfigurer的bean
        这种方式在配置file-encoding时，直接使用file-encoding="utf8"时会爆异常
        应该声明一个字符串的bean才不会报错
    -->
    <context:property-placeholder location="classpath:log4j.properties" file-encoding="utf8"/>
    <bean id="utf8" class="java.lang.String">
        <constructor-arg value="utf-8"></constructor-arg>
    </bean>

    <bean class="com.channelsoft.springweb.event.MailSenderListener"/>
    <bean id="mailSender" class="com.channelsoft.springweb.event.MailSender"/>
</beans>